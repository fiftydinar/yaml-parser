#!/bin/sh

yaml_help () {
  printf "\e[1;33mUsage:\e[0m yaml-parser file.yml\n"
  printf "       yaml-parser file.yml yaml-key\n"
  printf "       yaml-parser file.yml -w yaml-key yaml-value-replacement\n"
  printf "       yaml-parser file.yml --write yaml-key yaml-value-replacement\n"  
  printf "\e[1;33mIssue:\e[0m Only regular yaml keys are supported. Arrays are not supported.\n"
  printf "\e[1;33mAbout:\e[0m \"yaml-parser\" is a tool written in POSIX-compliant shell, which can perform basic data reading & manipulation of YAML files.\n"
  yaml_parser_url="https://github.com/fiftydinar/yaml-parser"
  printf "       \e]8;;%s\a%s\e]8;;\a\n" "${yaml_parser_url}" "${yaml_parser_url}"
}

yaml_read () {
    result=$(awk -F ": " -v key="${2}" '$1 == key {print $2}' "${1}" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')
    if [ -z "${result}" ]; then
      printf "\e[1;31mnull\e[0m\n"  # Print "null" in red color if no results are found
    else
      printf "\e[1;34m%s\e[0m\n" "${result}"  # Print the matching result in blue color
    fi
}

yaml_write () {
    result=$(awk -F ": " -v key="${3}" '$1 == key {print $2}' "${1}" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')
    if [ -z "${result}" ]; then
      printf "\e[1;31mERROR: Supplied YAML key doesn't exist.\e[0m\n" 1>&2
    else
      awk -v key="${3}" -v value="${4}" '$1 == key {$2 = value} 1' "${1}" > "${1}.tmp" && mv "${1}.tmp" "${1}"
    fi
}

if [ -z "${1}" ] || [ "${1}" = "help" ] || [ "${1}" = "--help" ] || [ "${1}" = "-h" ]; then
  yaml_help
elif case "${1}" in (*.yml|*.yaml) false;; (*) true;; esac; then
  printf "\e[1;31mERROR: YAML file is not specified in supported .yml or .yaml extension.\e[0m\n" 1>&2
elif [ -n "${1}" ] && [ -f "${1}" ] && [ -n "${2}" ] && [ ! "${2}" = "-r" ] && [ ! "${2}" = "--replace" ]; then
  yaml_read "${1}" "${2}"
elif [ -n "${1}" ] && [ -f "${1}" ] && [ -n "${2}" ] && [ "${2}" = "-w" ] || [ "${2}" = "--write" ] && [ -n "${3}" ] && [ -n "${4}" ]; then
  yaml_write "${1}" "${2}" "${3}" "${4}"
elif [ -n "${1}" ] && [ -f "${1}" ]; then
  while IFS= read -r line; do printf "\033[1;34m%s\033[0m\n" "${line}"; done < "${1}"
elif ! [ -f "${1}" ]; then
  printf "\e[1;31mERROR: YAML file that is specified is not found in the directory.\e[0m\n" 1>&2
fi
